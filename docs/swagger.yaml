definitions:
  command_template.CommandTemplate:
    properties:
      created_at:
        type: string
      description:
        type: string
      host:
        type: string
      http:
        $ref: '#/definitions/command_template.HTTPSCommand'
      id:
        type: integer
      monitor:
        $ref: '#/definitions/command_template.Monitor'
      mqtt:
        $ref: '#/definitions/command_template.MqttCommand'
      name:
        type: string
      port:
        type: string
      protocol:
        type: string
      redis:
        $ref: '#/definitions/command_template.RedisCommand'
      updated_at:
        type: string
      websocket:
        $ref: '#/definitions/command_template.WebsocketCommand'
    type: object
  command_template.CommandTemplateCreate:
    properties:
      description:
        type: string
      host:
        type: string
      http:
        $ref: '#/definitions/command_template.HTTPSCommand'
      monitor:
        $ref: '#/definitions/command_template.Monitor'
      mqtt:
        $ref: '#/definitions/command_template.MqttCommand'
      name:
        type: string
      port:
        type: string
      protocol:
        type: string
      redis:
        $ref: '#/definitions/command_template.RedisCommand'
      websocket:
        $ref: '#/definitions/command_template.WebsocketCommand'
    required:
    - host
    - name
    - port
    - protocol
    type: object
  command_template.HTTPSCommand:
    properties:
      authorization_type:
        type: string
      body:
        items:
          type: integer
        type: array
      body_type:
        type: string
      header:
        items:
          type: integer
        type: array
      method:
        type: string
      params:
        items:
          type: integer
        type: array
      url:
        type: string
    type: object
  command_template.MCondition:
    properties:
      calculate_type:
        type: string
      order:
        type: integer
      pre_logic_type:
        type: string
      search_rule:
        type: string
      value:
        type: string
    type: object
  command_template.Monitor:
    properties:
      column:
        type: string
      interval:
        type: integer
      m_conditions:
        items:
          $ref: '#/definitions/command_template.MCondition'
        type: array
      timeout:
        type: integer
    required:
    - column
    - timeout
    type: object
  command_template.MqttCommand:
    properties:
      header:
        items:
          type: integer
        type: array
      message:
        items:
          type: integer
        type: array
      topic:
        type: string
      type:
        type: string
    required:
    - topic
    - type
    type: object
  command_template.RedisCommand:
    properties:
      db:
        type: integer
      message:
        items:
          type: integer
        type: array
      password:
        type: string
      topic:
        type: string
      type:
        type: string
    required:
    - type
    type: object
  command_template.WebsocketCommand:
    properties:
      header:
        items:
          type: integer
        type: array
      message:
        type: string
      url:
        type: string
    required:
    - url
    type: object
  header_template.HeaderTemplate:
    properties:
      data:
        items:
          type: integer
        type: array
      id:
        type: integer
      name:
        type: string
    type: object
  header_template.HeaderTemplateCreate:
    properties:
      data:
        items:
          type: integer
        type: array
      name:
        type: string
    required:
    - data
    - name
    type: object
  header_template.HeaderTemplateUpdate:
    properties:
      data:
        items:
          type: integer
        type: array
      id:
        type: integer
      name:
        type: string
    required:
    - id
    type: object
  ping.SwaggerListPing:
    properties:
      age:
        example: 20
        type: integer
      name:
        example: wilson
        type: string
    type: object
  ping.SwaggerPing:
    properties:
      example:
        example: asdfasdf
        type: string
    type: object
  schedule.Schedule:
    properties:
      created_at:
        type: string
      description:
        type: string
      enabled:
        type: boolean
      id:
        type: integer
      name:
        type: string
      task_id:
        type: integer
      time_data:
        $ref: '#/definitions/schedule.TimeDatum'
      time_data_id:
        type: integer
      updated_at:
        type: string
    type: object
  schedule.ScheduleCreate:
    properties:
      description:
        type: string
      enabled:
        type: boolean
      name:
        type: string
      task_id:
        type: integer
      time_data:
        $ref: '#/definitions/schedule.TimeDatumCreate'
    required:
    - name
    - time_data
    type: object
  schedule.ScheduleUpdate:
    properties:
      description:
        type: string
      enabled:
        type: boolean
      id:
        type: integer
      name:
        type: string
      task_id:
        type: integer
      time_data:
        $ref: '#/definitions/schedule.TimeDatumUpdate'
    required:
    - id
    type: object
  schedule.TimeDatum:
    properties:
      condition_type:
        type: string
      end_date:
        type: string
      end_time:
        type: string
      interval_seconds:
        type: integer
      repeat_type:
        type: string
      start_date:
        type: string
      start_time:
        type: string
      t_condition:
        items:
          type: integer
        type: array
    type: object
  schedule.TimeDatumCreate:
    properties:
      condition_type:
        type: string
      end_date:
        type: string
      end_time:
        type: string
      interval_seconds:
        type: integer
      repeat_type:
        type: string
      start_date:
        type: string
      start_time:
        type: string
      t_condition:
        items:
          type: integer
        type: array
    required:
    - end_time
    - start_date
    - start_time
    type: object
  schedule.TimeDatumUpdate:
    properties:
      condition_type:
        type: string
      end_date:
        type: string
      end_time:
        type: string
      interval_seconds:
        type: integer
      repeat_type:
        type: string
      start_date:
        type: string
      start_time:
        type: string
      t_condition:
        items:
          type: integer
        type: array
    required:
    - end_time
    - repeat_type
    - start_date
    - start_time
    - t_condition
    type: object
  task_template.TaskStage:
    properties:
      command_template:
        $ref: '#/definitions/command_template.CommandTemplate'
      command_template_id:
        type: integer
      id:
        type: integer
      mode:
        type: string
      name:
        type: string
      stage_number:
        type: integer
      tag:
        items:
          type: integer
        type: array
    type: object
  task_template.TaskStageCreate:
    properties:
      command_template_id:
        type: integer
      mode:
        type: string
      name:
        type: string
      stage_number:
        type: integer
      tag:
        items:
          type: integer
        type: array
    required:
    - mode
    - name
    - stage_number
    type: object
  task_template.TaskStageUpdate:
    properties:
      command_template_id:
        type: integer
      id:
        type: integer
      mode:
        type: string
      name:
        type: string
      stage_number:
        type: integer
      tag:
        items:
          type: integer
        type: array
    required:
    - mode
    - name
    - stage_number
    type: object
  task_template.TaskTemplate:
    properties:
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      stages:
        items:
          $ref: '#/definitions/task_template.TaskStage'
        type: array
      updated_at:
        type: string
      variable:
        items:
          type: integer
        type: array
    type: object
  task_template.TaskTemplateCreate:
    properties:
      name:
        type: string
      stages:
        items:
          $ref: '#/definitions/task_template.TaskStageCreate'
        type: array
      variable:
        items:
          type: integer
        type: array
    required:
    - name
    type: object
  task_template.TaskTemplateUpdate:
    properties:
      id:
        type: integer
      name:
        type: string
      stages:
        items:
          $ref: '#/definitions/task_template.TaskStageUpdate'
        type: array
      variable:
        items:
          type: integer
        type: array
    required:
    - id
    type: object
  time_template.TimeDatum:
    properties:
      condition_type:
        type: string
      end_date:
        type: string
      end_time:
        type: string
      interval_seconds:
        type: integer
      repeat_type:
        type: string
      start_date:
        type: string
      start_time:
        type: string
      t_condition:
        items:
          type: integer
        type: array
    type: object
  time_template.TimeDatumCreate:
    properties:
      condition_type:
        type: string
      end_date:
        type: string
      end_time:
        type: string
      interval_seconds:
        type: integer
      repeat_type:
        type: string
      start_date:
        type: string
      start_time:
        type: string
      t_condition:
        items:
          type: integer
        type: array
    required:
    - end_time
    - start_date
    - start_time
    - t_condition
    type: object
  time_template.TimeDatumUpdate:
    properties:
      condition_type:
        type: string
      end_date:
        type: string
      end_time:
        type: string
      interval_seconds:
        type: integer
      repeat_type:
        type: string
      start_date:
        type: string
      start_time:
        type: string
      t_condition:
        items:
          type: integer
        type: array
    required:
    - end_time
    - repeat_type
    - start_date
    - start_time
    - t_condition
    type: object
  time_template.TimeTemplate:
    properties:
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      time_data:
        $ref: '#/definitions/time_template.TimeDatum'
      updated_at:
        type: string
    type: object
  time_template.TimeTemplateCreate:
    properties:
      name:
        type: string
      time_data:
        $ref: '#/definitions/time_template.TimeDatumCreate'
    required:
    - name
    - time_data
    type: object
  time_template.TimeTemplateUpdate:
    properties:
      id:
        type: integer
      name:
        type: string
      time_data:
        $ref: '#/definitions/time_template.TimeDatumUpdate'
    required:
    - id
    type: object
host: 127.0.0.1:5487
info:
  contact:
    email: wwilson008@gmail.com
    name: Wilson
    url: https://github.com/littlebluewhite
  description: This is a schedule-command server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Schedule-Command swagger API
  version: "2.0"
paths:
  /command_template/:
    delete:
      parameters:
      - description: command_template id
        in: body
        name: ids
        required: true
        schema:
          items:
            type: integer
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: delete successfully
          schema:
            type: string
      summary: Delete command templates
      tags:
      - command_template
    get:
      description: Get all command templates
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/command_template.CommandTemplate'
            type: array
      summary: Show all command templates
      tags:
      - command_template
    post:
      consumes:
      - application/json
      parameters:
      - description: command template body
        in: body
        name: command_template
        required: true
        schema:
          items:
            $ref: '#/definitions/command_template.CommandTemplateCreate'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/command_template.CommandTemplate'
            type: array
      summary: Create command templates
      tags:
      - command_template
  /command_template/{id}:
    get:
      description: Get command templates by id
      parameters:
      - description: command template id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/command_template.CommandTemplate'
      summary: Show command templates
      tags:
      - command_template
  /header_template/:
    delete:
      parameters:
      - description: header_template id
        in: body
        name: ids
        required: true
        schema:
          items:
            type: integer
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: delete successfully
          schema:
            type: string
      summary: Delete header templates
      tags:
      - header_template
    get:
      description: Get all header templates
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/header_template.HeaderTemplate'
            type: array
      summary: Show all header templates
      tags:
      - header_template
    patch:
      consumes:
      - application/json
      parameters:
      - description: modify header template body
        in: body
        name: header_template
        required: true
        schema:
          items:
            $ref: '#/definitions/header_template.HeaderTemplateUpdate'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: update successfully
          schema:
            type: string
      summary: Update header templates
      tags:
      - header_template
    post:
      consumes:
      - application/json
      parameters:
      - description: header template body
        in: body
        name: header_template
        required: true
        schema:
          items:
            $ref: '#/definitions/header_template.HeaderTemplateCreate'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/header_template.HeaderTemplate'
            type: array
      summary: Create header templates
      tags:
      - header_template
  /header_template/{id}:
    get:
      description: Get header templates by id
      parameters:
      - description: header template id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/header_template.HeaderTemplate'
      summary: Show header templates
      tags:
      - header_template
  /ping/list:
    get:
      description: test list ping
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/ping.SwaggerListPing'
            type: array
      summary: return list ping
      tags:
      - ping
  /ping/test:
    get:
      description: test ping
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ping.SwaggerPing'
      summary: test ping
      tags:
      - ping
  /schedule/:
    delete:
      parameters:
      - description: schedule id
        in: body
        name: ids
        required: true
        schema:
          items:
            type: integer
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: delete successfully
          schema:
            type: string
      summary: Delete schedules
      tags:
      - schedule
    get:
      description: Get all schedules
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/schedule.Schedule'
            type: array
      summary: Show all schedules
      tags:
      - schedule
    patch:
      consumes:
      - application/json
      parameters:
      - description: modify schedule body
        in: body
        name: schedule
        required: true
        schema:
          items:
            $ref: '#/definitions/schedule.ScheduleUpdate'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: update successfully
          schema:
            type: string
      summary: Update schedules
      tags:
      - schedule
    post:
      consumes:
      - application/json
      parameters:
      - description: schedule body
        in: body
        name: schedule
        required: true
        schema:
          items:
            $ref: '#/definitions/schedule.ScheduleCreate'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/schedule.Schedule'
            type: array
      summary: Create schedules
      tags:
      - schedule
  /schedule/{id}:
    get:
      description: Get schedules by id
      parameters:
      - description: schedule id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schedule.Schedule'
      summary: Show schedules
      tags:
      - schedule
  /task_template/:
    delete:
      parameters:
      - description: task_template id
        in: body
        name: ids
        required: true
        schema:
          items:
            type: integer
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: delete successfully
          schema:
            type: string
      summary: Delete task templates
      tags:
      - task_template
    get:
      description: Get all task templates
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/task_template.TaskTemplate'
            type: array
      summary: Show all task templates
      tags:
      - task_template
    patch:
      consumes:
      - application/json
      parameters:
      - description: modify task template body
        in: body
        name: task_template
        required: true
        schema:
          items:
            $ref: '#/definitions/task_template.TaskTemplateUpdate'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: update successfully
          schema:
            type: string
      summary: Update task templates
      tags:
      - task_template
    post:
      consumes:
      - application/json
      parameters:
      - description: task template body
        in: body
        name: task_template
        required: true
        schema:
          items:
            $ref: '#/definitions/task_template.TaskTemplateCreate'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/task_template.TaskTemplate'
            type: array
      summary: Create task templates
      tags:
      - task_template
  /task_template/{id}:
    get:
      description: Get task templates by id
      parameters:
      - description: task template id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/task_template.TaskTemplate'
      summary: Show task templates
      tags:
      - task_template
  /time_template/:
    delete:
      parameters:
      - description: time_template id
        in: body
        name: ids
        required: true
        schema:
          items:
            type: integer
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: delete successfully
          schema:
            type: string
      summary: Delete time templates
      tags:
      - time_template
    get:
      description: Get all time templates
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/time_template.TimeTemplate'
            type: array
      summary: Show all time templates
      tags:
      - time_template
    patch:
      consumes:
      - application/json
      parameters:
      - description: modify time template body
        in: body
        name: time_template
        required: true
        schema:
          items:
            $ref: '#/definitions/time_template.TimeTemplateUpdate'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: update successfully
          schema:
            type: string
      summary: Update time templates
      tags:
      - time_template
    post:
      consumes:
      - application/json
      parameters:
      - description: time template body
        in: body
        name: time_template
        required: true
        schema:
          items:
            $ref: '#/definitions/time_template.TimeTemplateCreate'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/time_template.TimeTemplate'
            type: array
      summary: Create time templates
      tags:
      - time_template
  /time_template/{id}:
    get:
      description: Get time templates by id
      parameters:
      - description: time template id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/time_template.TimeTemplate'
      summary: Show time templates
      tags:
      - time_template
swagger: "2.0"
